{"version":3,"sources":["index.js"],"names":["Word","word","setGuess","chunks","match","class","map","chunk","split","letter","onClick","Guess","checkAndAdd","Reset","CurrentGuess","guess","CorrectGuesses","words","SpellingBee","letters","React","useState","dictionary","correctGuesses","setCorrectGuesses","msg","setMsg","a","includes","concat","ReactDOM","render","document","querySelector"],"mappings":"wLAIMA,G,MAAO,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAChBC,EAASF,EAAKG,MAAM,WAExB,OACE,qBAAKC,MAAM,YAAX,SACGF,EAAOG,KAAI,SAACC,GAAD,OACV,qBAAKF,MAAM,MAAX,SACGE,EAAMC,MAAM,IAAIF,KAAI,SAACG,GAAD,OACnB,wBACEJ,MAAM,iBACNK,QAAS,WACPR,EAASO,IAHb,SAMGA,gBASTE,EAAQ,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACf,OACE,wBAAQP,MAAM,iBAAiBK,QAAS,kBAAME,KAA9C,yBAMEC,EAAQ,SAAC,GAAkB,IAAhBX,EAAe,EAAfA,SACf,OACE,wBAAQG,MAAM,iBAAiBK,QAAS,kBAAMR,EAAS,KAAvD,yBAMEY,EAAe,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtB,OAAO,8BAAMA,KAGTC,EAAiB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACxB,OACE,gCACE,yCACA,6BACGA,EAAMX,KAAI,SAACL,GAAD,OACT,6BAAKA,aAOTiB,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACTC,IAAMC,SAAS,IADN,mBAC5BN,EAD4B,KACrBb,EADqB,KAO3BoB,EAAa,CAAC,YAAa,YAAa,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,QAAS,QAAS,QAAS,QAAS,QAAS,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAP1d,EASSF,IAAMC,SAAS,IATxB,mBAS5BE,EAT4B,KASZC,EATY,OAUbJ,IAAMC,SAAS,KAVF,mBAU5BI,EAV4B,KAUvBC,EAVuB,KA4BnC,OACE,gCACE,2DACA,8BACE,6BAAKD,MAEP,cAACzB,EAAD,CAAMC,KAAMkB,EAASjB,SA/BT,SAACyB,GACfzB,EAASa,EAAQY,MA+Bf,cAAChB,EAAD,CAAOC,YAAa,kBAvBLX,EAuBuBc,EAtBxCb,EAAS,SACJoB,EAAWM,SAAS3B,GAKrBsB,EAAeK,SAAS3B,GAC1ByB,EAAO,sBAAwBzB,EAAO,OAIxCyB,EAAO,cAAgBzB,EAAO,gBAC9BuB,EAAkBD,EAAeM,OAAO5B,KAVtCyB,EAAO,qBAAuBzB,EAAO,MAHvB,IAACA,KAwBf,cAACY,EAAD,CAAOX,SAAUA,IACjB,cAACY,EAAD,CAAcC,MAAOA,IACrB,cAACC,EAAD,CAAgBC,MAAOM,QAK7BO,IAASC,OACP,cAACb,EAAD,CAAaC,QAAQ,YACrBa,SAASC,cAAc,Y","file":"static/js/main.074f9c2c.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\n\nconst Word = ({ word, setGuess }) => {\n  var chunks = word.match(/.{1,3}/g);\n\n  return (\n    <div class=\"container\">\n      {chunks.map((chunk) => (\n        <div class=\"row\">\n          {chunk.split(\"\").map((letter) => (\n            <button\n              class=\"button button5\"\n              onClick={() => {\n                setGuess(letter);\n              }}\n            >\n              {letter}\n            </button>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst Guess = ({ checkAndAdd }) => {\n  return (\n    <button class=\"button button2\" onClick={() => checkAndAdd()}>\n      Guess Word\n    </button>\n  );\n};\n\nconst Reset = ({ setGuess }) => {\n  return (\n    <button class=\"button button2\" onClick={() => setGuess(\"\")}>\n      Reset Word\n    </button>\n  );\n};\n\nconst CurrentGuess = ({ guess }) => {\n  return <div>{guess}</div>;\n};\n\nconst CorrectGuesses = ({ words }) => {\n  return (\n    <div>\n      <h2>Answers</h2>\n      <ol>\n        {words.map((word) => (\n          <li>{word}</li>\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nconst SpellingBee = ({ letters }) => {\n  const [guess, setGuess] = React.useState(\"\");\n\n  var addLetter = (a) => {\n    setGuess(guess + a);\n  };\n\n    const dictionary = [\"bamboozle\", \"blameable\", \"emblaze\", \"ablaze\", \"embalm\", \"emblem\", \"bamboo\", \"amoeba\", \"booze\", \"mambo\", \"bloom\", \"mamba\", \"bezel\", \"able\", \"alma\", \"aloe\", \"babe\", \"bale\", \"baba\", \"ball\", \"balm\", \"beam\", \"bell\", \"blam\", \"blob\", \"boba\", \"boll\", \"bolo\", \"bomb\", \"boob\", \"boom\", \"lamb\", \"lame\", \"laze\", \"lobe\", \"loom\", \"male\", \"mall\", \"maze\", \"meal\", \"mole\", \"moll\", \"oboe\", \"ooze\", \"zeal\", \"zoom\", \"all\", \"ale\", \"baa\", \"bee\", \"boo\", \"bob\", \"ebb\", \"eel\", \"elm\", \"lab\", \"lob\", \"mam\", \"mob\", \"moo\"];\n\n  const [correctGuesses, setCorrectGuesses] = React.useState([]);\n  const [msg, setMsg] = React.useState(\" \");\n\n  var checkAndAdd = (word) => {\n    setGuess(\"\");\n    if (!dictionary.includes(word)) {\n      setMsg(\"Incorrect guess: '\" + word + \"'\");\n      return;\n    }\n\n    if (correctGuesses.includes(word)) {\n      setMsg(\"You already found '\" + word + \"'!\");\n      return;\n    }\n\n    setMsg(\"Nice one! '\" + word + \"' is a word!\");\n    setCorrectGuesses(correctGuesses.concat(word));\n  };\n\n  return (\n    <div>\n      <h1>Adam's Spelling Bee Game!</h1>\n      <div>\n        <h4>{msg}</h4>\n      </div>\n      <Word word={letters} setGuess={addLetter} />\n      <Guess checkAndAdd={() => checkAndAdd(guess)} />\n      <Reset setGuess={setGuess} />\n      <CurrentGuess guess={guess} />\n      <CorrectGuesses words={correctGuesses} />\n    </div>\n  );\n};\n\nReactDOM.render(\n  <SpellingBee letters=\"mableoz\" />,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}